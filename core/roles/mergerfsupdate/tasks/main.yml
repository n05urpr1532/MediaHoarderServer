---
- name: "MergerFS | Install prerequisite build tools for Debian"
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - build-essential
      - g++
      - pkg-config
      - git
      - git-buildpackage
      - pandoc
      - debhelper
      - libfuse-dev
      - libattr1-dev
      - jq
  when: ansible_distribution == 'Debian'

- name: "MergerFS | Install prerequisite build tools for Ubuntu"
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - build-essential
      - g++
      - pkg-config
      - git
      - git-buildpackage
      - pandoc
      - debhelper
      - libfuse-dev
      - libattr1-dev
      - jq
  when: ansible_distribution == 'Ubuntu'

- name: "MergerFS | Get URL for latest MergerFS release"
  shell: |
    curl -s https://api.github.com/repos/trapexit/mergerfs/releases/latest \
      | jq -r ".assets[] | select(.name | test(\"{{ ansible_distribution|lower }}-{{ ansible_distribution_release|lower }}_amd64\")) \
      | .browser_download_url"
  args:
    executable: /bin/bash
    warn: no
  register: mergerfs_download_url
  ignore_errors: yes

- name: "MergerFS | Set 'mergerfs_download_url_backup' variable"
  set_fact:
    mergerfs_download_url_backup: https://github.com/trapexit/mergerfs/releases/download/2.28.1/mergerfs_2.28.1.{{ ansible_distribution|lower
      }}-{{ ansible_distribution_release|lower }}_amd64.deb

- name: "MergerFS | Install mergerfs"
  apt:
    deb: "{{ mergerfs_download_url.stdout | default('{{ mergerfs_download_url_backup }}') }}"
    state: present

- name: Check if unionfs is running and works
  command: systemctl status "{{ item }}"
  with_items:
    - pgunion
  ignore_errors: yes
  changed_when: false

- name: unionfs restart
  systemd:
    state: restarted
    daemon_reload: yes
    name: pgunion

- name: 'Restart Containers'
  shell: 'docker restart $(docker ps -a -q)'
  ignore_errors: yes

- name: 'Restart check.sh'
  shell: 'bash /opt/mhs/lib/core/pgui/templates/check.sh >/dev/null 2>&1'
  ignore_errors: yes

- name: Check if docker is running and works
  command: systemctl status "{{ item }}"
  with_items:
    - docker
  ignore_errors: yes
  changed_when: false
